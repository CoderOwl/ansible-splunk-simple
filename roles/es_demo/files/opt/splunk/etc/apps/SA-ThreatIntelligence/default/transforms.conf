#####################
## Threat lists
#####################

# Default local threat list
[local_threatlist]
filename = local_threatlist.csv
case_sensitive_match = false

[local_threatlist_domains]
filename = local_threatlist_domains.csv
case_sensitive_match = false

[local_threatlist_urls]
filename = local_threatlist_urls.csv
case_sensitive_match = false


###### Merged Threat List lookups ######
#
#   Note: max_matches has been left at default of 100. Increase the value if
#   the number of threat lists in use is greater than the default.

[alexa_lookup_by_str]
filename = alexa_by_str.csv

[asn_lookup_by_str]
filename = asn_by_str.csv

[asn_lookup_by_cidr]
filename = asn_by_cidr.csv
match_type = CIDR(ip)

[mozilla_public_suffix_lookup]
filename = mozilla_public_suffix.csv
case_sensitive_match = false

[threatlist_categories]
filename = threatlist_categories.csv
case_sensitive_match = false

[threatlist_names]
filename = threatlist_names.csv
case_sensitive_match = false

[threatlist_lookup_by_cidr]
filename = threatlist_by_cidr.csv
match_type = CIDR(key)

# This lookup is only used for data model construction and should not be
# referenced in user searches - it uses string matching only (no CIDR).
[threatlist_lookup_by_cidr_static]
filename = threatlist_by_cidr.csv

[threatlist_lookup_by_domain_or_url]
filename = threatlist_by_domain_or_url.csv
case_sensitive_match = false

[threatlist_lookup_by_str]
filename = threatlist_by_str.csv
case_sensitive_match = false

#####################
## Bogon list
#####################

# The bogon list is maintained by the user since bogon addresses are often
# used for internal subnets.

[bogonlist_lookup_by_cidr]
filename = bogonlist.csv
match_type = CIDR(ip)


#####################
## Eventgen
#####################

## Set host for FSchange sample data
[host_for_fschange_sample_data]
REGEX    = (.+)
DEST_KEY = MetaData:Host
FORMAT   = host::SJCDCSV012ERP01

[source_for_fschange_sample_data]
REGEX    = (.+)
DEST_KEY = MetaData:Source
FORMAT   = source::SJCDCSV012ERP01


#####################
## Incident Review
#####################

## Time based lookup for daily log review statii
[incident_review_lookup]
filename    = incident_review.csv
time_field  = time
time_format = %m/%d/%Y %H:%M:%S %Z

## Time based lookup for daily log review statii
[incident_review_comment_lookup]
filename    = incident_review.csv
time_field  = time
time_format = %m/%d/%Y %H:%M:%S %Z

fields_list = time,rule_id,comment
max_matches = 50

## Incident Review
[kv_for_incident_review]
DELIMS = ","
FIELDS = end_time,rule_id,status,comment,user

## Security domains lookup
[security_domain_lookup]
filename = security_domains.csv


#####################
## Notable Events
#####################

###### Correlation Searches ######
[correlationsearches_lookup]
case_sensitive_match = false
filename             = correlationsearches.csv

[correlationsearchmeta_lookup]
case_sensitive_match = false
filename             = correlationsearchmeta.csv

###### Governance ######
[governance_lookup]
case_sensitive_match = false
filename             = governance.csv

###### Notables ######

## Anything destined for the notable index sourcetype as notable
[force_sourcetype_for_notable_index]
SOURCE_KEY = _MetaData:Index
DEST_KEY   = MetaData:Sourcetype
REGEX      = notable
FORMAT     = sourcetype::notable

## Force index to notable for any files ending in ".notable"
[force_index_for_notable_text]
DEST_KEY = _MetaData:Index
REGEX    = .
FORMAT   = notable

## SOLNESS-330
[orig_raw_for_notable]
REGEX  = orig_raw=\"(.*?[^\\])(\",\s*\S+\=)
FORMAT = orig_raw::"$1"

[drilldown_search_for_notable]
REGEX  = drilldown_search=\"(.*?)(\",\s*\S+\=)
FORMAT = drilldown_search::"$1"

[rule_description_for_notable]
REGEX  = rule_description=\"(.*?)(\",\s*\S+\=)
FORMAT = rule_description::"$1"

## Equivalent to `parse_event_id(orig_event_id)`
## Uses event_id compatible with real-time (no _cd)
[orig_splunk_server-orig_index-orig_event_hash_for_notable]
SOURCE_KEY = orig_event_id
REGEX      = (.*?)\@\@(.*?)\@\@(.*)
FORMAT     = orig_splunk_server::"$1" orig_index::"$2" orig_event_hash::"$3"

###### Owners ######
[notable_owners_lookup]
filename = notable_owners.csv

###### Statuses ######
[reviewstatuses_lookup]
filename = reviewstatuses.csv

[expected_status_group_lookup]
filename = expected_status_groups.csv

###### Suppressions ######
[force_sourcetype_for_NotableEventSuppressionList]
DEST_KEY = MetaData:Sourcetype
REGEX    = NotableEventSuppressionList_html:\d+
FORMAT   = sourcetype::notable_event_suppression:list

[force_sourcetype_for_NotableEventSuppressionEdit]
DEST_KEY = MetaData:Sourcetype
REGEX    = NotableEventSuppressionEditor:\d+
FORMAT   = sourcetype::notable_event_suppression:edit

[signature_for_nes_autodisable]
REGEX  = (Detected expired suppression)
FORMAT = signature::$1

[suppression_for_nes_audit]
REGEX  = suppression(?:\=|\s+)\'?notable_suppression-([^';]+)
FORMAT = suppression::$1

###### Urgency ######
[prioritizer]
external_cmd  = prioritizer_lookup.py
external_type = python
fields_list   = priorities,priority

[urgency_lookup]
filename = urgency.csv

[prioritizer]
external_cmd = prioritizer_lookup.py
fields_list  = priorities,priority


#####################
## Mapping
#####################

###### nbtstat ######
[force_host_for_nbtstat]
DEST_KEY = MetaData:Host
REGEX    = Node\s+IpAddress\:\s+\[([^\]]+)
FORMAT   = host::$1

[force_host_for_nmblookup]
DEST_KEY = MetaData:Host
REGEX    = Looking\s+up\s+status\s+of\s+([^\r\n]+)
FORMAT   = host::$1

###### nslookup ######
[force_host_for_nslookup]
DEST_KEY = MetaData:Host
REGEX    = Server\:\s+([^\r\n]+)
FORMAT   = host::$1

###### ping ######
[force_host_for_ping]
DEST_KEY = MetaData:Host
REGEX    = PING\s+([^\s]+)
FORMAT   = host::$1


#####################
## Risk
#####################
[risk_object_types_lookup]
filename = risk_object_types.csv
