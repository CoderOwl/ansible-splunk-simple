<form script="time_center.js" stylesheet="time_center.css">
	<label>Time Center</label>
	
	<fieldset autoRun="true" submitButton="true">
        
		<!-- should_timesync tokens (performance_dst, appstate_dst, host_should_timesync): see time_center.js -->
        <input type="dropdown" token="should_timesync">
            <label>Show only systems that should timesync</label>
            <choice value="">All</choice>
            <choice value="true">True</choice>
            <choice value="false">False</choice>
            <default></default>
        </input>
        
		<!-- system tokens (peformance_dest, appstate_dest, host): see time_center.js -->
        <input type="text" token="system">
            <label>System</label>
            <default></default>
        </input>
        
        <!-- bunit tokens (peformance_bunit, appstate_bunit, host_bunit): see time_center.js -->
        <input type="text" token="bunit">
            <label>Business Unit</label>
            <default></default>
        </input>

        <!-- category tokens (peformance_category, appstate_category, host_category): see time_center.js -->
        <input type="dropdown" token="category">
            <label>Category</label>
            <choice value="">All</choice>
            <populatingSearch fieldForValue="category" fieldForLabel="category">| `categories`</populatingSearch>
            <default></default>
        </input>
        
		<input type="time">
			<default>Last 30 days</default>
		</input>
	</fieldset>
    
    <row>
    	<table id="element1">
    		<title>Time Synchronization Failures</title>
    		
    		<searchTemplate>| tstats `summariesonly` max(_time) as _time,latest(All_Performance.dest_should_timesync) as dest_should_timesync,count from datamodel=Performance where nodename=All_Performance.OS.Timesync All_Performance.OS.Timesync.action=failure $performance_dst$ $performance_dest$ $performance_bunit$ $performance_category$ by All_Performance.dest | head 100 | eval action="failure" | `drop_dm_object_name("All_Performance")` | fields _time,action,dest,dest_should_timesync,count</searchTemplate>
    	
    		<drilldown>
    			<link>search?q=| `datamodel("Performance","Timesync")` | `drop_dm_object_name("All_Performance")` | rename OS.Timesync.action as action | search action="failure" dest="$row.dest$"&amp;earliest=$earliest$&amp;latest=$latest$</link>
    		</drilldown>
    	</table>

    	<table id="element2">
    		<title>Systems Not Time Synching</title>
    		
    		<searchTemplate>| tstats `summariesonly` min(_time) as firstTime,max(_time) as lastTime,latest(All_Performance.dest_should_timesync) as dest_should_timesync from datamodel=Performance where nodename=All_Performance.OS.Timesync All_Performance.OS.Timesync.action=success $performance_dst$ $performance_dest$ $performance_bunit$ $performance_category$ by All_Performance.dest | `drop_dm_object_name("All_Performance")` | `timeDiff(lastTime)` | search timeDiff>86400 | sort 100 + lastTime | `uitime(firstTime)` | `uitime(lastTime)` | fields firstTime,lastTime,dest,dest_should_timesync</searchTemplate>
    	
    		<drilldown>
    			<link>search?q=| `datamodel("Performance","Timesync")` | `drop_dm_object_name("All_Performance")` | rename OS.Timesync.action as action | search dest="$row.dest$"&amp;earliest=$earliest$&amp;latest=$latest$</link>
    		</drilldown>
    	</table>
    </row>
    
    <row>
    	<table id="element3">
    		<title>Indexing Time Delay</title>
    		
    		<searchTemplate>$host_should_timesync$ $host$ $host_bunit$ $host_category$ `index_time_delta` | stats min(min_timeDiff) as min_timeDiff,max(max_timeDiff) as max_timeDiff,sum(sum_timeDiff) as sum_timeDiff,sum(count) as count by host | `get_asset(host)` | eval "min_diff(minutes)"=round(min_timeDiff/60,1) | eval "max_diff(minutes)"=round(max_timeDiff/60,1) | eval "avg_diff(minutes)"=round(sum_timeDiff/(count*60),1) | sort 100 + avg_diff(minutes) | fields host,host_should_timesync,min_diff(minutes),avg_diff(minutes),max_diff(minutes)</searchTemplate>
    	
    		<drilldown>
    			<link>search?q=orig_host="$row.host$" `index_time_delta`&amp;earliest=$earliest$&amp;latest=$latest$</link>
    		</drilldown>
    	</table>
    	
    	<table id="element4">
    		<title>Time Service Start Mode Anomalies</title>
    		
    		<searchTemplate>| tstats `summariesonly` max(_time) as _time,latest(All_Application_State.Services.start_mode) as start_mode,latest(All_Application_State.Services.status) as status,latest(All_Application_State.dest_should_timesync) as dest_should_timesync from datamodel=Application_State where nodename=All_Application_State.Services (All_Application_State.tag=time All_Application_State.tag=synchronize) $appstate_dst$ $appstate_dest$ $appstate_bunit$ $appstate_category$ by All_Application_State.dest,All_Application_State.Services.service | `drop_dm_object_name("All_Application_State")` | `drop_dm_object_name("Services")` | search start_mode!=auto | sort 100 + start_mode | fields _time,dest,dest_should_timesync,service,start_mode,status</searchTemplate>
    	
    		<drilldown>
    			<link>search?q=| `datamodel("Application_State", "Services")` | `drop_dm_object_name("All_Application_State")` | `drop_dm_object_name("Services")` | search dest="$row.dest$" service="$row.service$" | head 2&amp;earliest=$earliest$&amp;latest=$latest$</link>
    		</drilldown>
    	</table>
    </row>
</form>