
[Access - Brute Force Access Behavior Detected - Rule]
security_domain  = access
severity         = high
rule_name        = Brute Force Access Behavior Detected
description      = Detects excessive number of failed login attempts along with a successful attempt (this could indicate a successful brute force attack)
rule_title       = Brute Force Access Behavior Detected From $src$
rule_description = The system $src$ has failed authentication $failure$ times and successfully authenticated $success$ times in the last hour
drilldown_name   = View all login attempts by system $src$
drilldown_search = | datamodel Authentication Authentication search | search Authentication.src="$src$"
default_status   =
default_owner    = 

## commenting guided mode for now, as this implementation does not allow for RT
#search           = {\
#    "version":  "1.0",\
#    "searches": [\
#        {"key":          "src",\
#         "datamodel":    "Authentication",\
#         "object":       "Failed_Authentication",\
#         "aggregates":   [{"function": "values", "attribute": "Authentication.tag", "alias": "tag"},\
#                          {"function": "count", "alias": "failed_count"}\
#                         ],\
#         "splitby":      [{"attribute": "Authentication.src", "alias": "src"}],\
#         "resultFilter": {"field": "failed_count", "comparator": ">", "value": "6"}\
#        },\
#        {"key":          "src",\
#         "datamodel":    "Authentication",\
#         "object":       "Successful_Authentication",\
#         "aggregates":   [{"function": "count", "alias": "successful_count"}],\
#         "splitby":      [{"attribute": "Authentication.src", "alias": "src"}]\
#        }\
#    ],\
#    "alert.suppress":         "1",\
#    "alert.suppress.fields":  ["src"]\
#}\

[Access - Cleartext Password At Rest - Rule]
security_domain  = access
severity         = high
rule_name        = Cleartext Password At Rest Detected
description      = Detects cleartext passwords being stored at rest (such as in the Unix passwd file)
rule_title       = 
rule_description = The system $dest$ is storing the password for user $user$ in the clear
drilldown_name   = View cleartext passwords for user $user$ on device $dest$
drilldown_search = | datamodel "Compute_Inventory" "Cleartext_Passwords" search | search All_Inventory.dest="$dest$" All_Inventory.User.user="$user$" All_Inventory.password="$password$"
default_status   =
default_owner    = 
search           = {\
    "version":  "1.0",\
    "searches": [\
        {"datamodel":    "Compute_Inventory",\
         "object":       "Cleartext_Passwords",\
         "aggregates":   [{"function": "max", "attribute": "_time", "alias": "lastTime"},\
                          {"function": "latest", "attribute": "_raw", "alias": "orig_raw"},\
                          {"function": "values", "attribute": "All_Inventory.tag", "alias": "tag"},\
                          {"function": "count"}\
                         ],\
         "splitby":      [\
                          {"attribute": "All_Inventory.dest", "alias": "dest"},\
                          {"attribute": "All_Inventory.User.user", "alias": "user"},\
                          {"attribute": "All_Inventory.User.password", "alias": "password"}\
                         ]\
        }\
    ],\
    "alert.suppress":        "1",\
    "alert.suppress.fields": ["dest","user","password"]\
}\

[Access - Completely Inactive Account - Rule]
security_domain  = access
severity         = informational
rule_name        = Completely Inactive Account
description      = Discovers accounts that are no longer used. Unused accounts should be disabled and are oftentimes used by attackers to gain unauthorized access.
rule_title       = Completely Inactive Account For $user$
rule_description = User account $user$ has not successfully authenticated in 90 days.  Please verify this account is still needed.
drilldown_name   = View inactive $user$ accounts
drilldown_search = | `inactive_accounts(90)` | `uitime(firstTime)` | `uitime(second2lastTime)` | `uitime(lastTime)` | search user="$user$"
default_status   =
default_owner    = 
search           = {\
    "version":  "1.0",\
    "searches": [\
        {"inputlookup": {"lookupName": "access_tracker"},\
         "eventFilter": "((now()-'lastTime')/86400)>90"\
        }\
    ],\
    "alert.suppress":        "1",\
    "alert.suppress.fields": ["user"]\
}\
         
[Access - Default Account Usage - Rule]
security_domain  = access
severity         = low
rule_name        = Default Account Activity Detected
description      = Discovers use of default accounts (such as admin, administrator, etc.). Default accounts have default passwords and are therefore commonly targeted by attackers using brute force attack tools.
rule_title       = 
rule_description = User account $user$ is a default account that successfully authenticated to $dest$ at $lastTime$.  Please verify this activity conforms with your information security policy.
drilldown_name   = View usage of default account $user$ on device $dest$
drilldown_search = | datamodel "Authentication" "Successful_Default_Authentication" search | search Authentication.dest="$dest$" Authentication.user="$user$"
default_status   =
default_owner    = 
search           = {\
    "version":  "1.0",\
    "searches": [\
        {"datamodel":    "Authentication",\
         "object":       "Successful_Default_Authentication",\
         "aggregates":   [{"function": "max", "attribute": "_time", "alias": "lastTime"},\
                          {"function": "values", "attribute": "Authentication.tag", "alias": "tag"},\
                          {"function": "count"}\
                         ],\
         "splitby":      [\
                          {"attribute": "Authentication.dest", "alias": "dest"},\
                          {"attribute": "Authentication.user", "alias": "user"},\
                          {"attribute": "Authentication.app", "alias": "app"}\
                         ]\
        }\
    ],\
    "alert.suppress":        "1",\
    "alert.suppress.fields": ["dest","user","app"]\
}\

[Access - Default Accounts At Rest - Rule]
security_domain  = access
severity         = low
rule_name        = Default Account At Rest Detected
description      = Discovers the presence of default accounts even if they are not being used. Default accounts should be disabled in order to prevent an attacker from using them to gain unauthorized access to remote hosts.
rule_title       = 
rule_description = The device $dest$ currently allows authentication for the default account $user$.  Please verify your information security policy allows authentication for this account.
drilldown_name   = View default account $user$ at rest on device $dest$
drilldown_search = | datamodel "Compute_Inventory" "Default_Accounts" search | search All_Inventory.dest="$dest$" All_Inventory.User.user="$user$"
default_status   =
default_owner    = 
search           = {\
    "version":  "1.0",\
    "searches": [\
        {"datamodel":    "Compute_Inventory",\
         "object":       "Default_Accounts",\
         "eventFilter":  "NOT like('All_Inventory.User.shell',\"%nologin\") AND NOT like('All_Inventory.User.shell',\"%false\") AND 'All_Inventory.User.user'!=\"root\"",\
         "aggregates":   [{"function": "max", "attribute": "_time", "alias": "lastTime"},\
                          {"function": "latest", "attribute": "_raw", "alias": "orig_raw"},\
                          {"function": "values", "attribute": "All_Inventory.tag", "alias": "tag"},\
                          {"function": "count"}\
                         ],\
         "splitby":      [\
                          {"attribute": "All_Inventory.dest", "alias": "dest"},\
                          {"attribute": "All_Inventory.User.user", "alias": "user"}\
                         ]\
        }\
    ],\
    "alert.suppress":        "1",\
    "alert.suppress.fields": ["dest","user"]\
}\

[Access - Excessive Failed Logins - Rule]
security_domain = access
severity = medium
rule_name = Excessive Failed Logins
description      = Detects excessive number of failed login attempts (this is likely a brute force attack)
rule_title       = 
rule_description = The system $src$ has failed $app$ authentication $count$ times using $user_count$ username(s) against $dest_count$ target(s) in the last hour
drilldown_name   = View all login failures by system $src$ for the application $app$
drilldown_search = | datamodel Authentication Failed_Authentication search | search Authentication.src="$src$" Authentication.app="$app$"
default_status   =
default_owner    = 
search           = {\
    "version":  "1.0",\
    "searches": [\
        {"datamodel":    "Authentication",\
         "object":       "Failed_Authentication",\
         "aggregates":   [{"function": "values", "attribute": "Authentication.tag", "alias": "tag"},\
                          {"function": "dc", "attribute": "Authentication.user", "alias": "user_count"},\
                          {"function": "dc", "attribute": "Authentication.dest", "alias": "dest_count"},\
                          {"function": "count"}\
                         ],\
         "splitby":      [\
                          {"attribute": "Authentication.app", "alias": "app"},\
                          {"attribute": "Authentication.src", "alias": "src"}\
                         ],\
         "resultFilter": {"field": "count", "comparator": ">=", "value": "6"}\
        }\
    ],\
    "alert.suppress":        "1",\
    "alert.suppress.fields": ["app","src"]\
}\
         
[Access - Inactive Account Usage - Rule]
security_domain  = access
severity         = low
rule_name        = Inactive Account Activity Detected
description      = Discovers previously inactive accounts that are now being used. This may be due to an attacker that successfully gained access to an account that was no longer being used.
rule_title       = Inactive Account Activity Detected For $user$
rule_description = User account $user$ was inactive for $inactiveDays$ days but logged in at $lastTime$.  Please verify this account is still needed.
drilldown_name   = View usage of previously inactive account $user$
drilldown_search = | `inactive_account_usage("90","1.25")` | `uitime(firstTime)` | `uitime(second2lastTime)` | `uitime(lastTime)` | search user=$user$
default_status   =
default_owner    = 

[Access - Insecure Or Cleartext Authentication - Rule]
security_domain  = access
severity         = high
rule_name        = Insecure Or Cleartext Authentication Detected
description      = Detects authentication requests that transmit the password over the network as cleartext (unencrypted)
rule_title       = 
rule_description = The device $dest$ is accepting insecure or cleartext $app$ authentication
drilldown_name   = View insecure or cleartext authentication requests for $app$ on device $dest$
drilldown_search = | datamodel "Authentication" "Insecure_Authentication" search | search Authentication.app="$app$" Authentication.dest="$dest$"
default_status   =
default_owner    = 
search           = {\
    "version":  "1.0",\
    "searches": [\
        {"datamodel":    "Authentication",\
         "object":       "Insecure_Authentication",\
         "aggregates":   [{"function": "max", "attribute": "_time", "alias": "lastTime"},\
                          {"function": "latest", "attribute": "_raw", "alias": "orig_raw"},\
                          {"function": "values", "attribute": "Authentication.tag", "alias": "tag"},\
                          {"function": "count"}\
                         ],\
         "splitby":      [\
                          {"attribute": "Authentication.app", "alias": "app"},\
                          {"attribute": "Authentication.dest", "alias": "dest"}\
                         ]\
        }\
    ],\
    "alert.suppress":        "1",\
    "alert.suppress.fields": ["app","dest"]\
}\
