
#####################
## Asset
#####################

###### Correlation Searches ######
[Asset - Asset Ownership Unspecified - Rule]
security_domain     = identity
severity            = low
rule_name           = Asset Ownership Unspecified
description         = Alerts when there are assets that define a specific priority and category but do not have an assigned owner. 
rule_title          = Identified $count$ Asset(s) without Ownership
rule_description    = $count$ asset(s) were identified as having a defined priority and category without an assigned owner. This may indicate a potential responsibility gap.
drilldown_name      = View Affected Asset(s)
drilldown_search    = | datamodel "Identity_Management" "All_Assets" search | where isnotnull('All_Assets.priority') AND len('All_Assets.priority')>0 AND isnotnull('All_Assets.category') AND len('All_Assets.category')>0 AND (isnull('All_Assets.owner') OR len('All_Assets.owner')==0) AND (isnull('All_Assets.ip') OR len('All_Assets.ip')==0 OR mvcount('All_Assets.ip')==1)
default_status      = 
default_owner       = 
search              = {\
    "version":  "1.0",\
    "searches": [\
        {"datamodel":	 "Identity_Management",\
         "object":		 "All_Assets",\
         "earliest":     "0",\
         "latest":       "now",\
         "eventFilter":  "isnotnull('All_Assets.priority') AND len('All_Assets.priority')>0 AND isnotnull('All_Assets.category') AND len('All_Assets.category')>0 AND (isnull('All_Assets.owner') OR len('All_Assets.owner')==0) AND (isnull('All_Assets.ip') OR len('All_Assets.ip')==0 OR mvcount('All_Assets.ip')==1)",\
         "aggregates":   [{"function": "count"}],\
         "resultFilter": {"field": "count", "comparator": ">", "value": "0"}\
        }\
    ],\
    "alert.suppress":        "1",\
    "alert.suppress.fields": ["const_dedup_id"]\
}\


#####################
## Identity
#####################

###### Correlation Searches ######
[Identity - Activity from Expired User Identity - Rule]
security_domain  = identity
severity         = high
rule_name        = Activity from Expired User Identity
description      = Alerts when an event is discovered from a user associated with identity that is now expired (that is, the end date of the identity has been passed).
rule_title       = Activity from Expired User Identity ($user$)
rule_description = Activity from an expired identity was observed. This is indicative of activity from a user whose access should have been disabled.
drilldown_name   = View activity from $user$
drilldown_search = | datamodel Identity_Management Expired_Identity_Activity search | search (Expired_Identity_Activity.user="$user$" OR Expired_Identity_Activity.src_user="$user$")
default_status   =
default_owner    = 
search           = {\
    "version":  "1.0",\
    "searches": [\
        {"datamodel":	"Identity_Management",\
         "object":		"Expired_Identity_Activity",\
         "aggregates":  [{"function": "max", "attribute": "_time", "alias": "lastTime"},\
                         {"function": "latest", "attribute": "_raw", "alias": "orig_raw"},\
                         {"function": "count"}\
                        ],\
         "splitby":     [{"attribute": "Expired_Identity_Activity.expired_user", "alias": "user"}]\
        }\
    ],\
    "alert.suppress":        "1",\
    "alert.suppress.fields": ["user"]\
}\
