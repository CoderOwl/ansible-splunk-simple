<form script="forwarder_auditing.js">
	<label>Forwarder Audit</label>
	
	<fieldset autoRun="true" submitButton="true">
	
		<!-- is_expected tokens (host_is_expected, dest_is_expected): see forwarder_auditing.js -->
        <input type="dropdown" token="is_expected">
            <label>Show only expected hosts</label>
            <choice value="">All</choice>
            <choice value="true">True</choice>
            <choice value="false">False</choice>
            <default></default>
        </input>
        
        <!-- system tokens (host, dest): see forwarder_auditing.js -->
        <input type="text" token="system">
            <label>Host</label>
            <default></default>
        </input>

		<!-- bunit tokens (host_bunit, dest_bunit): see forwarder_auditing.js -->
        <input type="text" token="bunit">
            <label>Business Unit</label>
            <default></default>
        </input>

		<!-- category tokens (host_category, dest_category): see forwarder_auditing.js -->
        <input type="dropdown" token="category">
            <label>Category</label>
            <choice value="">All</choice>
            <populatingSearch fieldForValue="category" fieldForLabel="category">| `categories`</populatingSearch>
            <default></default>
        </input>
        
		<input type="time">
			<default>Last 30 days</default>
		</input>

	</fieldset>

    <row>
        <chart id="element1">
            <title>Event Count Over Time By Host</title>
            
            <searchTemplate>| `tstats` sum(count) from sa_host_meta where * $host_is_expected$ $host$ $host_bunit$ $host_category$ by _time,host span=1d | timechart minspan=1d useother=`useother` sum(count) by host</searchTemplate>
            
            <option name="charting.axisTitleY.text">count</option>
            <option name="charting.chart">area</option>
            <option name="charting.chart.nullValueMode">zero</option>
            <option name="charting.drilldown">all</option>
            
            <drilldown>
                <link>search?q=search host="$click.name2$"&amp;earliest=$earliest$&amp;latest=$latest$</link>
            </drilldown>
        </chart>
    </row>

    <row>
        <table id="element2">
            <title>Hosts By Last Report Time</title>
            
            <searchTemplate>| `host_eventcount` | search $host_is_expected$ $host$ $host_bunit$ $host_category$ | rename totalCount as count | eval firstTimeEpoch=firstTime | eval lastTimeEpoch=lastTime | eval lastTimeEpoch=if(lastTimeEpoch&lt;=firstTimeEpoch,firstTimeEpoch+1,lastTimeEpoch) | `uitime(firstTime)` | `uitime(lastTime)` | table host is_expected firstTime* lastTime* count dayDiff</searchTemplate>

			<option name="fields">host,is_expected,firstTime,lastTime,count,dayDiff</option>

            <drilldown>
                <link>search?q=search host="$row.host$"&amp;earliest=$row.firstTimeEpoch$&amp;latest=$row.lastTimeEpoch$&amp;auto_pause=true</link>
            </drilldown>
        </table>
    </row>

    <row>
        <table id="element3">
            <title>Splunkd Process Utilization</title>
            
            <searchTemplate>| tstats `summariesonly` avg(All_Application_State.Processes.cpu_load_percent) as avg_cpu_load,avg(All_Application_State.Processes.mem_used) as avg_mem_used from datamodel=Application_State where nodename=All_Application_State.Processes All_Application_State.process=*splunkd* $dest_is_expected$ $dest$ $dest_bunit$ $dest_category$ by All_Application_State.dest | `drop_dm_object_name("All_Application_State")` | eval "avg_cpu_load (%)"=floor(avg_cpu_load) | eval "avg_mem_used (MB)"=floor(avg_mem_used/1048576) | fields - avg_cpu_load,avg_mem_used | sort 100 - "avg_cpu_load (%)"</searchTemplate>

            <drilldown>
                <link>search?q=| `datamodel("Application_State", "Processes")` | `drop_dm_object_name("All_Application_State")` | `drop_dm_object_name("Processes")` | search process=*splunkd* dest="$row.dest$"&amp;earliest=$earliest$&amp;latest=$latest$</link>
            </drilldown>
        </table>

        <table id="element4">
            <title>Splunk Service Start Mode</title>
            
            <searchTemplate>| tstats `summariesonly` latest(All_Application_State.Services.start_mode) as start_mode,latest(All_Application_State.Services.status) as status from datamodel=Application_State where nodename=All_Application_State.Services (All_Application_State.Services.service=splunkd OR All_Application_State.Services.service=splunk) $dest_is_expected$ $dest$ $dest_bunit$ $dest_category$ by All_Application_State.dest | `drop_dm_object_name("All_Application_State")` | sort 100 + start_mode</searchTemplate>

            <drilldown>
                <link>search?q=| `datamodel("Application_State", "Services")` | `drop_dm_object_name("All_Application_State")` | `drop_dm_object_name("Services")` | search (service=splunkd OR service=splunk) dest="$row.dest$"&amp;earliest=$earliest$&amp;latest=$latest$</link>
            </drilldown>
        </table>
    </row>

</form>