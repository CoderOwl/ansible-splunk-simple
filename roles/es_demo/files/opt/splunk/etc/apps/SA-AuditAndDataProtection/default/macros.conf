###### Audit ######

## Forwarder Auditing
[asset_eventcount]
definition = `assets` | join type=outer asset_id [| `host_eventcount` | `hourDiff` | rename host_asset_id as asset_id | fields asset_id,firstTime,lastTime,hourDiff,dayDiff]

## host_eventcount macros limited to 50k entries based on the use of "stats" for case insensitive consolidation
[host_eventcount]
definition = `host_eventcount("*")`

[host_eventcount(1)]
args       = index
definition = metadata type=hosts index=$index$ | `lower(host)` | stats min(firstTime) as firstTime,max(recentTime) as recentTime,max(lastTime) as lastTime,sum(totalCount) as totalCount by host | eval _time=lastTime | `get_asset(host)` | `get_identity4events(host_owner)` | eval is_expected=host_is_expected | eval dayDiff=round((now()-lastTime)/86400,2) | sort 0 -dayDiff

[host_eventcount(2)]
args       = lessThan,greaterThan
definition = `host_eventcount` | `daysago($lessThan$)` | `hoursago($greaterThan$,">")`
errormsg   = dayDiff (arg1) and hourDiff (arg2) must be greater than 0
iseval     = 0
validation = lessThan>=0 AND greaterThan>=0

[splunkd_utilization]
definition = `splunkd_utilization("*")`

[splunkd_utilization(1)]
args       = host
definition = `localprocesses($host$)` | search app="*splunkd*"

[splunkd_startmode]
definition = `splunkd_startmode("*")`

[splunkd_startmode(1)]
args       = host
definition = `service($host$)` | search (app=Splunkd OR app=splunk)

## Index Auditing
[index_settings]
definition = rest /services/data/indexes count=0 | rename title as index | eval time=time() | table time splunk_server index maxTotalDataSizeMB frozenTimePeriodInSecs coldToFrozenScript blockSignSize | `uitime(time)`

[index_eventcount]
definition = eventcount summarize=false report_size=true index=* | append [| eventcount summarize=false report_size=true index=_*] | rename server as splunk_server | eval size_KBytes=size_bytes/1024 | eval size_MBytes=size_KBytes/1024 | eval size_GBytes=size_MBytes/1024

[index_settings2]
definition = `index_settings` | join splunk_server,index [| `index_eventcount`] | `uptime2string(frozenTimePeriodInSecs,label)` | eval percentIndexInUse=(size_MBytes/maxTotalDataSizeMB)*100

[index_thruput(1)]
args       = metric
definition = index=_internal source="*metrics.log*" group=per_$metric$_thruput | eval KBytes=kb | eval MBytes=KBytes/1024 | eval GBytes=MBytes/1024 | eval KBps=kbps | eval MBps=KBps/1024 | eval GBps=MBps/1024
errormsg   = metric (arg1) must be index, source, sourcetype, or host
iseval     = 0
validation = metric=="index" OR metric=="source" OR metric=="sourcetype" OR metric=="host"

[license_info]
definition = index=_internal source="*license_audit.log*" todaysBytesIndexed | eval exceedTimeDiff=now()-lastExceedDate | `ctime(lastExceedDate)` | eval peakGBytes=peak/1073741824 | eval todaysGBytesIndexed=todaysBytesIndexed/1073741824

## Search Activity
## see Splunk_SA_CIM

## Expected views
[expected_views]
definition = inputlookup append=T expected_views_lookup | `lower(app)` | `lower(view)` | dedup app,view | `str_to_bool(is_expected)` | sort + app,view

[expected_views(1)]
args       = app
definition = `expected_views` | search app="$app$"

[expected_views(2)]
args       = app, view
definition = `expected_views` | search app="$app$" view="$view$"

[get_expected_views]
definition = lookup local=true expected_views_lookup app,view OUTPUT is_expected | `str_to_bool(is_expected)`

## View activity based on _internal splunk logs
[view_activity]
definition = `view_activity("*","*")`

[view_activity(1)]
args       = app
definition = `view_activity("$app$","*")`

[view_activity(2)]
args       = app, view
definition = index=_internal sourcetype=splunk_web_access method=GET status=200 | rex "GET /[^/]+/app/(?<app>[^/ ?]+)/(?<view>[^/ ?]+)" | search app="$app$" view="$view$"

## Expected View Tracking
[expected_view_tracker(1)]
args       = earliest
definition = tstats `summariesonly` count from datamodel=Splunk_Audit by _time,View_Activity.app,View_Activity.view,View_Activity.user span=1s | `drop_dm_object_name("View_Activity")` | `get_expected_views` | search is_expected=true | append [| `expected_views` | search is_expected=true | expectedactivity append=False fields="app,view" earliest=$earliest$ latest=now interval=86400 | eval count=0] | sort - _time

[expected_view_tracker(2)]
args       = earliest, app
definition = `expected_view_tracker($earliest$)` | search app="$app$"

[expected_view_tracker(3)]
args       = earliest, app, view
definition = `expected_view_tracker($earliest$)` | search app="$app$" view="$view$"


###### Data Protection ######
[get_decoration]
definition = eval decoration=_decoration

[audit_validation]
definition = index="_audit" | sort 0 -id | audit

[audit_rest]
definition = rest /services/configs/conf-audit count=0 splunk_server=local | search title=auditTrail | eval publicKey=if(publicKey="",null(),publicKey) | eval privateKey=if(privateKey="",null(),privateKey) | eval range=if(isnull(publicKey) OR isnull(privateKey),"elevated","low") | eval label=case(range=="low","Audit Signing is currently enabled",range=="elevated","Audit signing is currently disabled")

[expected_validity]
definition = inputlookup append=T expected_validity_lookup | `lower(gap)` | `lower(validity)` | dedup gap,validity
