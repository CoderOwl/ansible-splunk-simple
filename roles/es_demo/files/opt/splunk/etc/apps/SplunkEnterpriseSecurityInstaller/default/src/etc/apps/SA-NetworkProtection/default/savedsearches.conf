
#####################
## Global
#####################

###### Correlation Searches ######
[Network - Policy Or Configuration Change - Rule]
action.email.sendresults      = 0
action.risk                   = 1
action.risk._risk_object      = dvc
action.risk._risk_object_type = system
action.risk._risk_score       = 60
action.summary_index          = 1
action.summary_index._name    = notable
action.summary_index.ttl      = 1p
alert.digest_mode             = 1
alert.suppress                = 1
alert.suppress.fields         = dvc,command
alert.suppress.period         = 86300
alert.track                   = false
cron_schedule                 = */5 * * * *
disabled                      = True
dispatch.earliest_time        = rt-5m@m
dispatch.latest_time          = rt+5m@m
dispatch.rt_backfill          = 1
enableSched                   = 1
is_visible                    = false
search                        = | datamodel "Change_Analysis" "Network_Changes" search | stats max(_time) as "lastTime",latest(_raw) as "orig_raw",count by "All_Changes.dvc","All_Changes.action","All_Changes.command" | rename "All_Changes.dvc" as "dvc","All_Changes.action" as "action","All_Changes.command" as "command"


#####################
## Firewall
#####################

###### Base Searches ######
[Network - All Communication - Base]
action.postprocess = 0
enableSched        = 0
is_visible         = false
search             = `communicate` | table _time,sourcetype,action,bytes,dvc,dvc_bunit,dvc_category,dvc_pci_domain,rule,transport,src,src_bunit,src_category,src_pci_domain,src_port,dest,dest_bunit,dest_category,dest_pci_domain,dest_port,vendor_product,tag

###### Lookup Generating Searches ######

## Network - Communication Rule Tracker - Lookup Gen Breakdown
##  1-2 - get count by _time,dvc,rule,vendor_product from datamodel=Network_Traffic
##    3 - field renaming
##  4-5 - get month and year
##    6 - consolidate by month/year
##    7 - input communication_rule_tracker lookup
##    8 - consolidate results and existing lookup data
## 9-10 - recreate _time from month/year
##   11 - filter last 396 days of data
##   12 - remove unneeded fields
##   13 - write lookup
##   14 - purge results
[Network - Communication Rule Tracker - Lookup Gen]
action.email.sendresults = 0
cron_schedule            = 30 * * * *
dispatch.earliest_time   = -70m@m
dispatch.latest_time     = -10m@m
enableSched              = 1
is_visible               = false
search                   = | tstats `summariesonly` count from datamodel=Network_Traffic where All_Traffic.rule!=unknown by _time,All_Traffic.dvc,All_Traffic.rule,All_Traffic.vendor_product span=1d | `drop_dm_object_name("All_Traffic")` | convert timeformat="%m" ctime(_time) as month | convert timeformat="%Y" ctime(_time) as year | stats sum(count) as count by month,year,dvc,rule,vendor_product | inputlookup append=T communication_rule_tracker | stats sum(count) as count by month,year,dvc,rule,vendor_product | eval date=month."-01-".year | convert timeformat="%m-%d-%Y" mktime(date) as _time | `daysago(396)` | fields - _time,date,dayDiff | outputlookup communication_rule_tracker | stats count

## Network - Port And Protocol Tracker - Lookup Gen Breakdown
## 1-2 - get earliest/latest allowed traffic by transport,dest_port
##   3 - field renaming
##   4 - input port_protocol tracker
##   5 - consolidate results
##   6 - write lookup
##   7 - purge results
[Network - Port And Protocol Tracker - Lookup Gen]
action.email.sendresults = 0
cron_schedule            = 50 * * * *
dispatch.earliest_time   = -70m@m
dispatch.latest_time     = +0s
enableSched              = 1
is_visible               = false
search                   = | tstats `summariesonly` min(_time) as firstTime,max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.action=allowed by All_Traffic.transport,All_Traffic.dest_port | `drop_dm_object_name("All_Traffic")` | inputlookup append=T port_protocol_tracker | stats min(firstTime) as firstTime,max(lastTime) as lastTime by transport,dest_port | outputlookup port_protocol_tracker | stats count

## Network - Traffic Volume History - Lookup Gen Breakdown
## 1-2 - get unique src count and count by _time span=15m
##   3 - input traffic_volume tracker
##   4 - filter last 365d of data
##   5 - order fields
##   6 - write lookup
##   7 - purge results
[Network - Traffic Volume History - Lookup Gen]
action.email.sendresults = 0
## cron schedule and span are tightly coupled here because the need to maintain an accurate "dc"
cron_schedule            = 50 * * * *
dispatch.earliest_time   = -90m@m
dispatch.latest_time     = -30m@m
enableSched              = 1
is_visible               = false
search                   = | tstats `summariesonly` dc(All_Traffic.src) as src_count,count from datamodel=Network_Traffic by _time span=30m | inputlookup append=t traffic_volume_tracker | `daysago(365)` | fields _time,src_count,count | outputlookup traffic_volume_tracker | stats count


#####################
## IDS
#####################

###### Base Searches ######
[Network - All IDS Attacks - Base]
action.postprocess = 0
enableSched        = 0
is_visible         = false
search             = `ids_attack` | table _time,sourcetype,dvc,dvc_bunit,dvc_category,dvc_pci_domain,ids_type,category,signature,severity,src,src_bunit,src_category,src_pci_domain,dest,dest_bunit,dest_category,dest_pci_domain,vendor_product,tag

###### Lookup Generating Searches ######

## Network - IDS Attack Tracker - Lookup Gen Breakdown
## 1-2 - get the most recent ids_type,signature,vendor_product pairings from datamodel=Intrusion_Detection
##   3 - field renaming
##   4 - inputlookup existing data
##   5 - consolidate event and tracker data
##   6 - write lookup
##   7 - purge results
[Network - IDS Attack Tracker - Lookup Gen]
action.email.sendresults = 0
cron_schedule            = 20 * * * *
dispatch.earliest_time   = -70m@m
dispatch.latest_time     = +0s
enableSched              = 1
is_visible               = false
search                   = | tstats `summariesonly` min(_time) as firstTime,max(_time) as lastTime from datamodel=Intrusion_Detection where IDS_Attacks.signature!=unknown by IDS_Attacks.ids_type,IDS_Attacks.signature,IDS_Attacks.vendor_product | `drop_dm_object_name("IDS_Attacks")` | inputlookup append=T ids_attack_tracker | stats min(firstTime) as firstTime,max(lastTime) as lastTime by ids_type,signature,vendor_product | outputlookup ids_attack_tracker | stats count

## Network -  IDS Category Tracker - Lookup Gen Breakdown
## 1-2 - get the most recent category info from datamodel=Intrusion_Detection
##   3 - field renaming
##   4 - inputlookup existing data
##   5 - consolidate event and tracker data
##   6 - write lookup
##   7 - purge results
[Network - IDS Category Tracker - Lookup Gen]
action.email.sendresults = 0
cron_schedule            = 10,25,40,55 * * * *
dispatch.earliest_time   = -20m@m
dispatch.latest_time     = +0s
enableSched              = 1
is_visible               = false
search                   = | tstats `summariesonly` min(_time) as firstTime,max(_time) as lastTime from datamodel=Intrusion_Detection where IDS_Attacks.category!=unknown by IDS_Attacks.category,IDS_Attacks.vendor_product | `drop_dm_object_name("IDS_Attacks")` | inputlookup append=T ids_category_tracker | stats min(firstTime) as firstTime,max(lastTime) as lastTime by category,vendor_product | outputlookup ids_category_tracker | stats count


#####################
## Proxy
#####################

###### Base Searches ######
[Network - All Proxy - Base]
action.postprocess = 0
enableSched        = 0
is_visible         = false
search             = `proxy` | table _time,sourcetype,bytes_in,bytes_out,action,category,status,src,src_bunit,src_category,src_pci_domain,dest,dest_bunit,dest_category,dest_pci_domain,http_content_type,http_method,http_referrer,http_user_agent,url,url_length,user,user_bunit,user_category,tag


#####################
## Vulnerabilities
#####################

###### Base Searches ######
[Network - All Vulnerabilities - Base]
action.postprocess = 0
enableSched        = 0
is_visible         = false
search             = `vulnerability` | table _time,dest,dest_bunit,dest_category,dest_pci_domain,category,signature,cve,bugtraq,cert,msft,mskb,xref,severity,cvss,vendor_product,tag 

###### Correlation Searches ######
[Network - Vulnerability Scanner Detection (by event) - Rule]
action.email.sendresults      = 0
action.risk                   = 1
action.risk._risk_object      = src
action.risk._risk_object_type = system
action.risk._risk_score       = 80
action.summary_index          = 1
action.summary_index._name    = notable
action.summary_index.ttl      = 1p
alert.digest_mode             = 1
alert.suppress                = 1
alert.suppress.fields         = src
alert.suppress.period         = 86300
alert.track                   = false
cron_schedule                 = */5 * * * *
disabled                      = True
dispatch.earliest_time        = rt-65m@m
dispatch.latest_time          = rt-5m@m
dispatch.rt_backfill          = 1
enableSched                   = 1
is_visible                    = false
search                        = | datamodel "Intrusion_Detection" "IDS_Attacks" search | stats values(IDS_Attacks.tag) as "tag",dc(IDS_Attacks.signature) as "count" by "IDS_Attacks.src" | rename "IDS_Attacks.src" as "src" | where 'count'>25 | eval tag=mvjoin(tag,"|") | rename "tag" as "orig_tag"

[Network - Vulnerability Scanner Detection (by targets) - Rule]
action.email.sendresults      = 0
action.risk                   = 1
action.risk._risk_object      = src
action.risk._risk_object_type = system
action.risk._risk_score       = 80
action.summary_index          = 1
action.summary_index._name    = notable
action.summary_index.ttl      = 1p
alert.digest_mode             = 1
alert.suppress                = 1
alert.suppress.fields         = src
alert.suppress.period         = 86300
alert.track                   = false
cron_schedule                 = */5 * * * *
disabled                      = True
dispatch.earliest_time        = rt-65m@m
dispatch.latest_time          = rt-5m@m
dispatch.rt_backfill          = 1
enableSched                   = 1
is_visible                    = false
search                        = | datamodel "Intrusion_Detection" "IDS_Attacks" search | stats values(IDS_Attacks.tag) as "tag",dc(IDS_Attacks.dest) as "count" by "IDS_Attacks.src" | rename "IDS_Attacks.src" as "src" | where 'count'>25 | eval tag=mvjoin(tag,"|") | rename "tag" as "orig_tag"

###### Lookup Generating Searches ######

## Network - Vulnerability Signature Reference - Lookup Gen Breakdown
##   1-2 - get cve,bugtraq,cert,msft,mskb,xref values per signature,vendor_product
##     3 - field renaming
##     4 - read lookup
##  5-10 - make input data multi value
##    11 - consolidate results
## 12-17 - make cve,bugtraq,cert,msft,mskb,xref single value
##    18 - write lookup
##    19 - purge results
[Network - Vulnerability Signature Reference - Lookup Gen]
action.email.sendresults = 0
cron_schedule            = 20 * * * *
dispatch.earliest_time   = -70m@m
dispatch.latest_time     = +0s
enableSched              = 1
is_visible               = false
search                   = | tstats `summariesonly` min(_time) as firstTime,max(_time) as lastTime,values(Vulnerabilities.bugtraq) as bugtraq,values(Vulnerabilities.cert) as cert,values(Vulnerabilities.cve) as cve,values(Vulnerabilities.msft) as msft,values(Vulnerabilities.mskb) as mskb,values(Vulnerabilities.xref) as xref from datamodel=Vulnerabilities by Vulnerabilities.signature,Vulnerabilities.vendor_product | `drop_dm_object_name("Vulnerabilities")` | inputlookup append=T vuln_signature_reference | `makemv(bugtraq)` | `makemv(cert)` | `makemv(cve)` | `makemv(msft)` | `makemv(mskb)` | `makemv(xref)` | stats min(firstTime) as firstTime,max(lastTime) as lastTime,values(cve) as cve,values(bugtraq) as bugtraq,values(cert) as cert,values(msft) as msft,values(mskb) as mskb,values(xref) as xref by signature,vendor_product | `makesv(bugtraq)` | `makesv(cert)` | `makesv(cve)` | `makesv(msft)` | `makesv(mskb)` | `makesv(xref)` | outputlookup vuln_signature_reference | stats count
