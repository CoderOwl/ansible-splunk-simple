<form script="new_domain_analysis.js" stylesheet="new_domain_analysis.css" >
	<label>New Domain Analysis</label>
	
	<fieldset autoRun="true" submitButton="true">
	
	    <input type="text" token="domain_form">
            <label>Domain</label>
            <default></default>
        </input>
		
		<!-- domain_type_form tokens (domain_type, age_type): see new_domain_analysis.js -->
	    <input type="dropdown" token="domain_type_form">
            <label>Domain Type</label>
            <choice value="newly_registered">Newly Registered</choice>
            <choice value="newly_seen">Newly Seen</choice>
            <default>newly_registered</default>
        </input>
        
        <input type="text" token="age">
            <label>Maximum Age (days)</label>
            <default>30</default>
        </input>
        
		<input type="time">
			<default>Last 24 hours</default>
		</input>
		
		<html id="ppf_html">
        	<div id="ppf"></div>
        </html>
	</fieldset>

	<row>
        <table id="table1">
            <title>New Domain Activity</title>
            
            <searchTemplate>| tstats `summariesonly` max(_time) as _time,count from datamodel=Web by Web.dest | `drop_dm_object_name("Web")` | `get_whois` | search $domain$ $domain_type$ | eval "Age (days)"=ceil((now()-$age_type$)/86400) | where 'Age (days)'&lt;=$age$ | `alexa_lookup(domain)` | eval alexa_rank=if(isnull(domain_rank), "below 1 million", domain_rank) | eval domain=if(isnull(domain), dest, domain) | `swap_resolved_domain(domain)` | `per_panel_filter("ppf_new_domains","domain")` | rename ppf_filter as filter | eval resolved_domain=if(isnull(resolved_domain) OR resolved_domain=="unknown",null(),resolved_domain) | sort - filter,_time | `uitime($age_type$)` | fields _time,dest,domain,filter,$age_type$,"Age (days)",alexa_rank,count</searchTemplate>
            
            <drilldown>
                <link>web_search?form.dest=*$row.dest$&amp;earliest=$earliest$&amp;latest=$latest$</link>
			</drilldown>
        </table>
    </row>

    <row>
    	<chart id="element2">
			<title>New Domain Activity By Age</title>
			
            <searchTemplate>| tstats `summariesonly` count from datamodel=Web by Web.dest | `drop_dm_object_name("Web")` | `get_whois` | search $domain$ $domain_type$ | eval age=ceil((now()-$age_type$)/86400) | where age&lt;=$age$ | eval domain=if(isnull(domain), dest, domain) | `swap_resolved_domain(domain)` | `per_panel_filter("ppf_new_domains","domain")` | stats sum(count) as count by age | eval "Age (days)"=age | table "Age (days)",count</searchTemplate>
			
            <option name="charting.axisTitleX.text">age (days)</option>
            <option name="charting.axisTitleY.text">count</option>
            <option name="charting.chart">scatter</option>
            <option name="charting.legend.placement">none</option>
            
			<drilldown>
				<link>search?q=| `datamodel("Web", "Web")` | `drop_dm_object_name("Web")` | `get_whois` | search $domain$ $domain_type$ | eval age=ceil((now()-$age_type$)/86400) | where age="$click.value$"&amp;earliest=$earliest$&amp;latest=$latest$</link>
			</drilldown>
		</chart>
		
		<chart id="element3">
			<title>New Domain Activity By TLD</title>
			
            <searchTemplate>| tstats `summariesonly` count from datamodel=Web by Web.dest | `drop_dm_object_name("Web")` | `get_whois` | search $domain$ $domain_type$ | eval age=ceil((now()-$age_type$)/86400) | where age&lt;=$age$ | eval domain=if(isnull(domain), dest, domain) | `swap_resolved_domain(domain)` | `per_panel_filter("ppf_new_domains","domain")` | `get_tld(domain)` | stats sum(count) as count by tld | sort 10 - count</searchTemplate>
			
            <option name="charting.axisTitleX.text">tld</option>
            <option name="charting.axisTitleY.text">count</option>
            <option name="charting.chart">bar</option>
            <option name="charting.legend.placement">none</option>
            
			<drilldown>
				<link>search?q=| `datamodel("Web", "Web")` | `drop_dm_object_name("Web")` | `get_whois` | search $domain$ $domain_type$ | eval age=ceil((now()-$age_type$)/86400) | where age&lt;="$age$" | `swap_resolved_domain(dest)` | `get_tld(dest)` | search tld="$click.value$"&amp;earliest=$earliest$&amp;latest=$latest$</link>
			</drilldown>
		</chart>
	</row>
	
	<row>
	    <table id="table2">
            <title>Registration Details</title>
            
            <!-- We have to use a raw event search here instead of "| datamodel", because we need to tokenize time constraints -->
            <searchTemplate>earliest=-$age$d@d `whois` | eval newly_seen=_time  | eval created=if(match(created,"^\d{4}-\d{2}-\d{2}$"),strptime(created,"%Y-%m-%d"),created) | search $domain$ $domain_type$ | eval age=ceil((now()-$age_type$)/86400) | where age&lt;=$age$ | head 1000 | eval orig_domain=domain | `swap_resolved_domain(domain)` | `per_panel_filter("ppf_new_domains","domain")` | rename ppf_filter as filter | eval domain=orig_domain | eval resolved_domain=if(isnull(resolved_domain) OR resolved_domain=="unknown",null(),resolved_domain) | sort - filter,_time | `uitime(created)` | `uitime(expires)` | table _time domain resolved_domain filter created age expires nameservers registrant registrar</searchTemplate>
            
            <drilldown>
				<link>search?q=| `datamodel("Domain_Analysis","All_Domains")` | `drop_dm_object_name("All_Domains")` | search domain="$row.domain$"&amp;earliest=-$age$d@d&amp;latest=now</link>
			</drilldown>
        </table>
	</row>
</form>
