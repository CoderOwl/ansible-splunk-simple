
###### Correlation Searches ######
[Audit - Anomalous Audit Trail Activity Detected - Rule]
action.email.sendresults      = 0
action.risk                   = 1
action.risk._risk_object      = dest
action.risk._risk_object_type = system
action.risk._risk_score       = 40
action.summary_index          = 1
action.summary_index._name    = notable
action.summary_index.ttl      = 1p
alert.digest_mode             = 1
alert.suppress                = 1
alert.suppress.fields         = dest,signature
alert.suppress.period         = 86300
alert.track                   = false
cron_schedule                 = */5 * * * *
disabled                      = True
dispatch.earliest_time        = rt-5m@m
dispatch.latest_time          = rt+5m@m
dispatch.rt_backfill          = 1
enableSched                   = 1
is_visible                    = false
search                        = | datamodel "Change_Analysis" "Auditing_Changes" search | where ('All_Changes.action'="cleared" OR 'All_Changes.action'="stopped") | stats max(_time) as "lastTime",latest(_raw) as "orig_raw",count by "All_Changes.dest","All_Changes.result" | rename "All_Changes.dest" as "dest","All_Changes.result" as "signature"

[Audit - Expected Host Not Reporting - Rule]
action.email.sendresults      = 0
action.risk                   = 1
action.risk._risk_object      = host
action.risk._risk_object_type = system
action.risk._risk_score       = 60
action.summary_index          = 1
action.summary_index._name    = notable
action.summary_index.ttl      = 1p
alert.digest_mode             = 1
alert.suppress                = 1
alert.suppress.fields         = host
alert.suppress.period         = 86300
alert.track                   = false
cron_schedule                 = 0,15,30,45 * * * *
disabled                      = True
dispatch.latest_time          = +0s
enableSched                   = 1
is_visible                    = false
search                        = | `host_eventcount(30,2)` | search is_expected=true | `ctime(lastTime)` | fields + host,lastTime,is_expected,dayDiff | eval orig_time=_time

[Audit - Personally Identifiable Information Detection - Rule]
action.email.sendresults      = 0
action.risk                   = 1
action.risk._risk_object      = host
action.risk._risk_object_type = system
action.risk._risk_score       = 80
action.summary_index          = 1
action.summary_index._name    = notable
action.summary_index.ttl      = 1p
alert.digest_mode             = 1
alert.suppress                = 1
alert.suppress.fields         = pii_hash
alert.suppress.period         = 86300
alert.track                   = false
cron_schedule                 = */5 * * * *
disabled                      = True
dispatch.earliest_time        = rt-5m@m
dispatch.latest_time          = rt+5m@m
dispatch.rt_backfill          = 1
enableSched                   = 1
is_visible                    = false
search                        = NOT sourcetype=stash | `get_integer_seq` | lookup luhn_lite_lookup integer_seq OUTPUTNEW pii,pii_clean | eval pii_length=len(pii_clean) | lookup iin_lookup iin as pii_clean,length as pii_length OUTPUTNEW iin_issuer | search iin_issuer=* | `get_event_id` | rename event_id as orig_event_id | eval orig_raw=_raw | fields - _raw | fields + orig_event_id,orig_raw,host,pii,iin_issuer | eval pii_hash=sha1(pii) | eval orig_time=_time

[Audit - Potential Gap in Data - Rule]
action.email.sendresults   = 0
action.summary_index       = 1
action.summary_index._name = notable
action.summary_index.ttl   = 1p
alert.digest_mode          = 1
alert.suppress             = 1
alert.suppress.fields      = const_dedup_id
alert.suppress.period      = 14400
alert.track                = 0
cron_schedule              = */2 * * * *
disabled                   = True
dispatch.earliest_time     = -10m
dispatch.latest_time       = -5m
enableSched                = 1
is_visible                 = false
search                     = | datamodel "Splunk_Audit" "Search_Activity" search | where Search_Activity.status="success" AND (app="Splunk_*" OR app="SA-*" OR app="DA-*" OR app="SplunkEnterpriseSecuritySuite" OR app="SplunkPCIComplianceSuite") | stats count | where 'count'=0 | eval const_dedup_id="const_dedup_id"


###### Key Indicator Searches ######
[Performance - Number Of Systems Not Reporting]
action.email.reportServerEnabled              = 0
alert.track                                   = 0
action.keyindicator                           = 1
action.keyindicator.title                     = Not Reporting
action.keyindicator.subtitle                  = System Count
action.keyindicator.value                     = current_count
action.keyindicator.threshold                 = 
action.keyindicator.delta                     = 
action.keyindicator.invert                    = false
dispatch.latest_time                          = now
display.general.enablePreview                 = 1
display.general.timeRangePicker.show          = false
display.general.type                          = visualizations
display.statistics.rowNumbers                 = 0
display.statistics.wrap                       = 0
display.visualizations.charting.drilldown     = all
display.visualizations.singlevalue.underLabel = Expected Hosts Not Reporting
display.visualizations.show                   = 1
display.visualizations.type                   = singlevalue
search                                        = | `host_eventcount(30,2)` | search is_expected=true | stats count as current_count


###### Report Searches ######
[Audit - Event Count Over Time By Top 10 Hosts]
action.email.reportServerEnabled                    = 0
alert.track                                         = 0
dispatch.earliest_time                              = -30d@d
dispatch.latest_time                                = now
display.general.enablePreview                       = 1
display.general.type                                = visualizations
display.statistics.rowNumbers                       = 0
display.statistics.wrap                             = 0
display.visualizations.charting.chart               = area
display.visualizations.charting.chart.nullValueMode = zero
display.visualizations.charting.drilldown           = all
display.visualizations.show                         = 1
display.visualizations.type                         = charting
search                                              = | `tstats` sum(count) from sa_host_meta where [| metadata type=hosts | `lower(host)` | sort 10 - totalCount | fields host | format] by _time,host span=1d | timechart minspan=1d useother=`useother` sum(count) by host

[Audit - Hosts By Last Report Time]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.timeRangePicker.show = false
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = | `host_eventcount` | rename totalCount as count | `uitime(firstTime)` | `uitime(lastTime)` | table host is_expected firstTime lastTime count dayDiff

[Audit - Searches Over Time By Type]
action.email.reportServerEnabled                 = 0
alert.track                                      = 0
dispatch.earliest_time                           = -24h@h
dispatch.latest_time                             = now
display.general.enablePreview                    = 1
display.general.type                             = visualizations
display.statistics.rowNumbers                    = 0
display.statistics.wrap                          = 0
display.visualizations.charting.chart            = column
display.visualizations.charting.chart.stackMode  = stacked
display.visualizations.charting.drilldown        = all
display.visualizations.show                      = 1
display.visualizations.type                      = charting
search                                           = `search_activity` | timechart usenull=false count by search_type

[Audit - Searches Over Time By User]
action.email.reportServerEnabled                    = 0
alert.track                                         = 0
dispatch.earliest_time                              = -24h@h
dispatch.latest_time                                = now
display.general.enablePreview                       = 1
display.general.type                                = visualizations
display.statistics.rowNumbers                       = 0
display.statistics.wrap                             = 0
display.visualizations.charting.chart               = line
display.visualizations.charting.chart.nullValueMode = zero
display.visualizations.charting.drilldown           = all
display.visualizations.show                         = 1
display.visualizations.type                         = charting
search                                              = `search_activity` | timechart usenull=false count by user

[Audit - Splunkd Process Utilization]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.earliest_time               = -24h@h
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = | tstats `summariesonly` avg(All_Application_State.Processes.cpu_load_percent) as avg_cpu_load,avg(All_Application_State.Processes.mem_used) as avg_mem_used from datamodel=Application_State where nodename=All_Application_State.Processes All_Application_State.process=*splunkd* by All_Application_State.dest | `drop_dm_object_name("All_Application_State")` | eval "avg_cpu_load (%)"=floor(avg_cpu_load) | eval "avg_mem_used (MB)"=floor(avg_mem_used/1048576) | fields - avg_cpu_load,avg_mem_used | sort 100 - "avg_cpu_load (%)"

[Audit - Splunk Service Start Mode Anomalies]
action.email.reportServerEnabled     = 0
alert.track                          = 0
dispatch.earliest_time               = -24h@h
dispatch.latest_time                 = now
display.general.enablePreview        = 1
display.general.type                 = statistics
display.statistics.drilldown         = row
display.statistics.rowNumbers        = 0
display.statistics.wrap              = 0
display.visualizations.show          = 0
search                               = | tstats `summariesonly` max(_time) as _time,latest(All_Application_State.Services.start_mode) as start_mode,latest(All_Application_State.Services.status) as status from datamodel=Application_State where nodename=All_Application_State.Services (All_Application_State.Services.service=splunkd OR All_Application_State.Services.service=splunk) by All_Application_State.dest | `drop_dm_object_name("All_Application_State")` | search start_mode!=auto | sort 100 + start_mode | fields _time,dest,start_mode,status

[Audit - Top Searches By Run Time]
action.email.reportServerEnabled = 0
alert.track                      = 0
dispatch.earliest_time           = -24h@h
dispatch.latest_time             = now
display.general.enablePreview    = 1
display.general.type             = statistics
display.statistics.drilldown     = row
display.statistics.rowNumbers    = 0
display.statistics.wrap          = 0
display.visualizations.show      = 0
search                           = `search_activity` | stats max(_time) as _time,min(total_run_time) as "min(run_time)",avg(total_run_time) as "avg(run_time)",max(total_run_time) as "max(run_time)",count by search_type,search,user | sort 500 - "avg(run_time)" | fields _time,search_type,"min(run_time)","avg(run_time)","max(run_time)",count,user,search

[Audit - Web Service Errors]
action.email.reportServerEnabled = 0
alert.track                      = 0
dispatch.earliest_time           = -24h@h
dispatch.latest_time             = now
display.events.fields            = ["source", "sourcetype", "host", "event_id"]
display.events.list.wrap         = true
display.events.rowNumbers        = false
display.events.type              = list
display.general.enablePreview    = true
display.general.type             = events
search                           = | `datamodel("Splunk_Audit", "Web_Service_Errors")` | `drop_dm_object_name("Web_Service_Errors")` | head 1000


###### TSIDX Generating Searches ######

## Forwarder Audit
[Audit - Host Event Count over Time - TSIDX Gen]
action.email.sendresults = 0
cron_schedule            = 25 4,16 * * *
dispatch.earliest_time   = -725m@m
dispatch.latest_time     = -5m@m
enableSched              = 1
is_visible               = false
search                   = | metasearch index=* sourcetype!=stash | bin _time span=1d | stats count by _time,host | `get_asset(host)` | table _time,host,host_bunit,host_category,host_is_expected,host_pci_domain,tag,count | `tscollect("sa_host_meta")`
